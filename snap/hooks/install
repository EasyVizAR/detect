#!/bin/sh
#
# This script does some one-time tasks when the snap is installed for the first
# time.  After the first install, it will not be run again for version upgrades
# unless the snap is completely removed and reinstalled.
#

tmp_dir="$SNAP_COMMON"
install_dir="$SNAP_DATA"
model_dir="$SNAP_DATA/models"

log_file="$SNAP_COMMON/install.log"
error_file="$SNAP_COMMON/errors.log"

# Some devices may have a tmpfs filesystem that is too small to unpack torch
# for installation, which results in "No space left on device" errors.
export TMPDIR="$tmp_dir"

# Make sure the model directory exists.
mkdir -p "$model_dir"

install_onnxruntime () {
    if [ $SNAP_ARCH = "arm64" ]; then
        wheel_name=onnxruntime_gpu-1.11.0-cp39-cp39m-linux_aarch64.whl
        wget https://nvidia.box.com/shared/static/jmomlpcctmjojz14zbwa12lxmeh2h6o5.whl -O $tmp_dir/$wheel_name
        "$SNAP/bin/python3" -m pip install --no-cache-dir --prefix "$install_dir" $tmp_dir/$wheel_name
        rm $tmp_dir/$wheel_name
    else
        "$SNAP/bin/python3" -m pip install --no-cache-dir --prefix "$install_dir" "onnxruntime-gpu"
    fi
}

install_package () {
    "$SNAP/bin/python3" -m pip install --no-cache-dir --prefix "$install_dir" "$1"
}

test_package () {
    "$SNAP/bin/python3" -m pip show "$1"
}

# Test if system provides onnxruntime. Otherwise, install it.
test_package onnxruntime-gpu || test_package onnxruntime || install_onnxruntime >>"$log_file" 2>"$error_file"

#echo "Running snap install hook..." >$log_file
#
#"$SNAP/bin/python3" -m pip install --no-cache-dir --prefix "$install_dir" --requirement "$SNAP/setup/requirements.$SNAP_ARCH.txt" >>"$log_file" 2>"$error_file"
#
#if [ $? -eq 0 ]; then
#    echo "Python packages installed successfully" >>"$log_file"
#else
#    echo "Python packages were NOT installed, check $error_file" >>"$log_file"
#fi
